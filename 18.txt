Створи повноцінний вебзастосунок "Бібліотека фільмів", який складається з бекенду
на Express, бази даних PostgreSQL та фронтенду на React.
1. Бекенд (Express)
a. Створи сервер на Express, який містить REST API для роботи з фільмами.
b. Реалізуй такі маршрути:
i. GET /movies — отримати список усіх фільмів
ii. GET /movies/:id — отримати фільм за ID
iii. POST /movies — додати новий фільм
iv. PUT /movies/:id — оновити фільм
v. DELETE /movies/:id — видалити фільм
c. Фільм повинен мати такі поля: id, title, director, year, genre, rating
2. База даних (PostgreSQL на Render)
a. Створи безкоштовну базу даних PostgreSQL на Render
b. Підключи Express-сервер до цієї бази даних
c. Використовуй бібліотеку pg або knex для взаємодії з базою
d. Реалізуй міграції або SQL-скрипти для створення таблиці movies
3. Розгортання сервера (Render)
a. Завантаж код серверної частини на GitHub
b. Розгорни сервер на Render як Web Service
c. Вкажи build та start команди у package.json
d. Налаштуй змінні середовища для підключення до бази даних
PostgreSQL
4. Фронтенд (React)
a. Створи інтерфейс користувача для взаємодії з API
b. Виводь список фільмів у таблиці або картках
c. Додай форми для додавання, редагування та видалення фільмів
d. Використовуй axios або fetch для надсилання запитів до API
e. Забезпеч оновлення інтерфейсу після додавання або видалення фільму
5. Розгортання фронтенду (Render або Vercel)
a. Завантаж React-додаток на GitHub
b. Розгорни його як Static Site або Frontend на Render або Vercel
c. Вкажи змінну середовища з URL бекенду для підключення
6. Додаткові вимоги
a. Створи README.md, у якому опиши, як запустити проєкт локально
b. У репозиторії повинні бути окремі папки для бекенду і фронтенду
c. Додай перевірку валідності введених даних на фронтенді та бекенді